/*
Subsequences_of_String_Codestudio

You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.
A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.

    Sample Input 1:
    1 
    abc
    Sample Output 1 : a ab abc ac b bc c
    Explanation Of Sample Input 1 : All possible subsequences of abc are :  “a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”
*/

void solve(string str, string output, int index, vector<string> &ans)
    {
        if(index >= str.length())    //base case, subsets created
        {
            if(output.length() > 0)
                ans.push_back(output);
            return ;
        }
        
        //Exclude
        solve(str, output, index+1, ans);
        //Include
        char element = str[index];
        output.push_back(element);
        solve(str, output, index+1, ans);
    }

vector<string> subsequences(string str){
        vector<string> ans;
        string output = "";
        int index = 0;
        solve(str, output, index, ans);
        return ans;
    
    
}
